.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "RM" "1" "February 2015" "" ""
.
.SH "NAME"
\fBrm\fR \- 移除文件或者目录
.
.SH "总览"
\fBrm [−fiRr] file\.\.\.\fR
.
.SH "描述"
rm移除每个给定的文件。默认情况下，它不能移除目录。但当给定了\fB\-r\fR或者\fB\-R\fR 选项时，在指定目录之下的整个目录树都会被移除(而且对通过\fBrm \-r\fR能够移除的 目录树深度是没有限制的)。当文件路径末端部分只有"\."和"\.\."时会出错(可以用" rm \-r\.*"来避免)。
.
.P
如果给定了"\-i"选项，或者指定文件不可写，而且标准输入是终端，又没有给定 "\-f"选项，那么rm会提示用户是否要删除该文件，它写一个问题到标准错误stderr 并且从标准输入stdin读入一个应答。如果应答是否定的，该文件将被跳过。
.
.P
"System V"接口定义禁止移除正在执行的可执行二进制文件的最后一个链接。
.
.P
GNU的实现(fileutils)会因为可移除的层次深度的上限而招致损坏。(如果确实必 要，可使用\fBdeltree\fR工具来移除非常深的目录树。)
.
.SH "选项"
.
.TP
\fB\-d，\-\-directory\fR
用unlink(2)来替代rmdir(2)移除目录，而且不要求目录为空移除目录使 用的方式是unlink(2)，而非rmdir(2)，且在试图unlink目录之前不要求 其为空。这仅在你有合适权限时才能生效。因为unlink一个目录会导致在 删除目录下的文件非关联化，因此聪明的方法是在执行此之后fsck(8)文 件系统。
.
.TP
\fB\-f，\-\-force\fR
忽略不存在的文件，并且从不向用户提示。
.
.TP
\fB\-i，\-\-interactive\fR
提示是否移除每个文件。如果回答是否定的，文件将被跳过。
.
.TP
\fB\-r，\-R，\-\-recursive\fR
递归地移除目录中的内容。
.
.TP
\fB\-v，\-\-verbose\fR
在移除每个文件之前打印其名称。
.
.TP
\fB\-\-help\fR
在标准输出上打印用法信息，并且以成功状态退出。
.
.TP
\fB\-\-version\fR
在标准输出上打印版本信息，然后以成功状态退出。
.
.TP
\fB\-\-\fR
终止选项列表
.
.SH "备注"
本页介绍了包括在fileutils\-3\.16包中的rm；其他版本的可能会有细微的差别。
