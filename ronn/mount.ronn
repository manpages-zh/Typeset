mount(1) -- 挂载文件系统
==============================

##总览

`mount [-hV]`

`mount -a [-fFnrsvw] [-t vfstype]`

`mount [-fnrsvw] [-o options [,...]] device | dir`

`mount [-fnrsvw] [-t vfstype] [-o options] device dir`

##描述

将某个档案的内容解读成档案系统,然后将其挂在目录的某个位置之上,执行成功后
,直到我们使用umnount将这个档案系统移除为止,这个命令之下的所有档案将暂时
无法被调用.这个命令可以被用来挂上任何的档案系统,也可以用`-o loop`选项将
某个一般的档案当成硬盘机分割挂上系统.这个功能对于ramdisk ,romdisk或是ISO
9660的影像档之解读非常实用.

mount的使用权限是系统管理者或`/etc/fstab`中允许的使用者.

device:要挂载(mount)的设备.

dir:设备在系统上的挂载点(mount point).

##选项 

* `-V`:
显示程序版本

* `-h`:
显示辅助讯息

* `-v`:
显示较讯息,通常和`-f`用来除错.

* `-a`:
将`/etc/fstab`中定义的所有档案系统挂上.

* `-F`:
这个命令通常和`-a`一起使用,它会为每一个mount的动作产生一个行程负
责执行.在系统需要挂上大量NFS档案系统时可以加快挂上的动作.

* `-f`:
通常用在除错的用途.它会使mount并不执行实际挂上的动作,而是模拟整
个挂上的过程.通常会和`-v`一起使用.

* `-n`:
一般而言,mount在挂上后会在`/etc/mtab`中写入一笔资料.但在系统中没
有可写入档案系统存在的情况下可以用这个选项取消这个动作.

* `-s-r`:
等价于`-o ro`

* `-w`:
等价于`-o rw`

* `-L`:
将含有特定标签的硬盘分割挂上.

* `-U`:
将档案分割序号为的档案系统挂下.`-L`和`-U`必须在`/proc/partition`
这种档案存在时才有意义.

* `-t vfstype`:
指定档案系统的型态,通常不必指定.mount会自动选择正确的型态.

* `-o 参数`:
主要用来描述设备或档案的挂载方式.

##vfstype

The argument following the -t is used to indicate the filesystem type.
The  filesystem  types  which  are  currently  supported include:  adfs,
affs,  autofs,  btrfs,  cifs,  coda,  coherent, cramfs, debugfs, devpts,
efs, ext, ext2, ext3, ext4,  hfs,  hfs‐plus,  hpfs, iso9660, jfs, minix,
msdos, ncpfs, nfs, nfs4, ntfs, proc, qnx4,  ramfs,  reiserfs,  romfs,
squashfs,  smbfs,  sysv, tmpfs,  ubifs, udf, ufs, umsdos, usbfs, vfat,
xenix, xfs, xiafs.  Note that coherent, sysv and xenix are equivalent
and that xenix and  coherent  will be removed at some point in the
future - use sysv instead.  Since kernel version 2.1.21  the  types  ext
and xiafs  do not exist anymore.  Earlier, usbfs was known as usbde‐vfs.
Note, the real list of all supported  filesystems  depends on your
kernel.

常用类型有:

	光盘或光盘镜像:iso9660

	DOS fat16文件系统:msdos

	Windows 9x fat32文件系统:vfat

	Windows NT ntfs文件系统:ntfs

	Mount Windows文件网络共享:smbfs

	UNIX(LINUX) 文件网络共享:nfs

##options

下面的选项需作为`-o`的参数和`-o`一起使用

* `loop`:
用来把一个文件当成硬盘分区挂载上系统

* `ro`:
采用只读方式挂载设备

* `rw`:
采用读写方式挂载设备

* `iocharset`:
指定访问文件系统所用字符集

* `async`:
打开非同步模式,所有的档案读写动作都会用非同步模式执行.

* `sync`:
在同步模式下执行.

* `atime/noatime`:
当atime打开时,系统会在每次读取档案时更新档案的"上一次调用时间".
当我们使用flash档案系统时可能会选项把这个选项关闭以减少写入的次
数.

* `auto/noauto`:
打开/关闭自动挂上模式.

* `defaults`:
使用预设的选项`rw,suid,dev,exec,auto,nouser,async`.

* `exec/noexec`:
允许/禁止执行档被执行.

* `suid/nosuid`:
允许/禁止执行档在root权限下执行.

* `user/nouser`:
使用者可以/不可以执行mount/umount的动作.

* `remount`:
将一个已经挂下的档案系统重新用不同的方式挂上.例如原先是只读的系
统,现在用可读写的模式重新挂上.


##范例

**挂载光盘镜像文件**

1、从光盘制作光盘镜像文件.将光盘放入光驱,执行下面的命令.

	#cp /dev/cdrom /home/user/mydisk.iso 
	或
	#dd if=/dev/cdrom of=/home/user/mydisk.iso

注:执行上面的任何一条命令都可将当前光驱里的光盘制作成光盘镜像文件
"/home/user/mydisk.iso"

2、将文件和目录制作成光盘镜像文件,执行下面的命令.

	#mkisofs -r -J -V mydisk -o /home/user/mydisk.iso /home/user/ mydir

注:这条命令将/home/user/mydir目录下所有的目录和文件制作成光盘镜像文件
"/home/user/mydisk.iso",光盘卷标为mydisk.

3、光盘镜像文件的挂载(mount)

	#mkdir /mnt/vcdrom

注:建立一个目录用来作挂载点(mount point)

	#mount -o loop -t iso9660 /home/user/mydisk.iso /mnt/vcdrom

注:使用/mnt/vcdrom就可以访问盘镜像文件mydisk.iso里的所有文件了.

**挂载移动硬盘**

对linux系统而言,USB接口的移动硬盘是当作SCSI设备对待的.插入移动硬盘之前,
应先用`fdisk -l`或`more /proc/partitions`查看系统的硬盘和硬盘分区情况.

	# fdisk -l

接好移动硬盘后,再用`fdisk -l`或`more /proc/partitions`查看系统的硬盘和硬
盘分区情况

	# fdisk -l

假设你发现多了一个SCSI硬盘"/dev/sdc"和它的两个磁盘分区"/dev/sdc1"、
"/dev/sdc2",其中"/dev/sdc5"是"/dev/sdc2"分区的逻辑分区.我们可以使用下面
的命令挂载"/dev/sdc1"和"/dev/sdc5".

	#mkdir -p /mnt/usbhd1

	#mkdir -p /mnt/usbhd2

注:建立目录用来作挂载点(mount point)

	#mount -t ntfs /dev/sdc1 /mnt/usbhd1

	#mount -t vfat /dev/sdc5 /mnt/usbhd2

注:对ntfs格式的磁盘分区应使用`-t ntfs`参数,对fat32格式的磁盘分区应使用
`-t vfat`参数.若汉字文件名显示为乱码或不显示,可以使用下面的命令格式.

	#mount -t ntfs -o iocharset=cp936 /dev/sdc1 /mnt/usbhd1

	#mount -t vfat -o iocharset=cp936 /dev/sdc5 /mnt/usbhd2

linux系统下使用fdisk分区命令和mkfs文件系统创建命令可以将移动硬盘的分区制
作成linux系统所特有的ext2、ext3格式.这样,在linux下使用就更方便了.使用下
面的命令直接挂载即可.

	#mount /dev/sdc1 /mnt/usbhd1

**挂载U盘**

和USB接口的移动硬盘一样对linux系统而言U盘也是当作SCSI设备对待的.使用方法
和移动硬盘完全一样.

**挂载Windows文件共享**

Windows网络共享的核心是SMB/CIFS,在linux下要挂载windows的磁盘共享,就必须
安装和使用samba软件包.现在流行的linux发行版绝大多数已经包含了samba软件包
,如果安装linux系统时未安装samba请首先安装samba.

当windows系统共享设置好以后,就可以在linux客户端挂载了,具体操作如下:

	# mkdir -p /mnt/samba/etc/rc.d/init.d/portmap start (默认启动)

	/etc/rc.d/init.d/nfs start 启动NFS服务

	/etc/rc.d/init.d/nfs stop 停止NFS服务

注:建立一个目录用来作挂载点(mount point)

	# mount -o username=user,password=pass //10.140.133.23/c$ /mnt/samba

注:user和pass是ip地址为10.140.133.23的Windows计算机的一个用户名和密码,
c$

如此就可以在linux系统上通过/mnt/samba来访问windows系统磁盘上的文件了.以
上操作在redhat as server 3、redflag server 4.1、suse server 9以及windows
NT 4.0、windows 2000、windows xp、windows 2003环境下测试通过.

**挂载UNIX系统NFS文件共享**

类似于Windows的网络共享,UNIX(Linux)系统也有自己的网络共享,那就是NFS(网
络文件系统),下面我们就以SUN Solaris2.8和REDHAT as server 3 为例简单介绍
一下在linux下如何mount nfs网络共享.

在linux客户端挂载(mount)NFS磁盘共享之前,必须先配置好NFS服务端.

1、Solaris系统NFS服务端配置方法如下:

(1)修改 /etc/dfs/dfstab, 增加共享目录

	share -F nfs -o rw /export/home/user

(2)启动nfs服务

	# /etc/init.d/nfs.server start

(3)NFS服务启动以后,也可以使用下面的命令增加新的共享

	# share /export/home/user1

	# share /export/home/user2

注:/export/home/user和/export/home/user1是准备共享的目录

2、linux系统NFS服务端配置方法如下:

(1)修改 /etc/exports,增加共享目录

	/export/home/user 10.140.133.23(rw)

	/export/home/user1 *(rw)

	/export/home/user2 linux-client(rw)

注:/export/home/目录下的user、user1、user2是准备共享的目录,10.140.133.23
、\*、linux-client是被允许挂载此共享linux客户机的IP地址或主机名.如果要
使用主机名linux-client必须在服务端主机/etc/hosts文件里增加linux-client
主机ip定义.格式如下:

	10.140.133.23 linux-client

(2)启动与停止NFS服务

	/etc/rc.d/init.d/portmap start (在REDHAT中PORTMAP是默认启动的)

	/etc/rc.d/init.d/nfs start 启动NFS服务

	/etc/rc.d/init.d/nfs stop 停止NFS服务

注:若修改/etc/export文件增加新的共享,应先停止NFS服务,再启动NFS服务方能使
新增加的共享起作用.使用命令exportfs -rv也可以达到同样的效果.

3、linux客户端挂载(mount)其他linux系统或UNIX系统的NFS共享

	# mkdir -p /mnt/nfs

注:建立一个目录用来作挂载点(mount point)

	#mount -t nfs -o rw 10.140.133.9:/export/home/user /mnt/nfs

注:这里我们假设10.140.133.9是NFS服务端的主机IP地址,当然这里也可以使用主
机名,但必须在本机/etc/hosts文件里增加服务端ip定义./export/home/user为服
务端共享的目录.

##相关命令

umount(1) 

##版权

本手册由以下文档整理而来

<http://www.cnblogs.com/lovemo1314/archive/2011/09/30/2196703.html>

<http://www.jb51.net/linux/mount.htm>

