chown(1) -- 改变文件所有者和所属组
==========================================

##摘要

`chown [选项]...[所有者][:[所属组]] 文件...`

`chown [选项]...--reference=参考文件文件...`

##描述

本手册页记录了GNU版本的chown。chown修改每一个指定文件的所有者和(或)所属
组。当仅指定了所有者(用户名或者数字用户ID)，那个用户将成为每一个指定文件
的所有者，同时文件的所属组不会发生改变。如果所有者后紧跟着一个冒号和一个
所属组名(或数字所属组ID)，并且之间没有任何空格时，这些文件的所属组也会发
生改变。如果用户名和冒号后面并没有所属组名，那个用户将成为这些文件的所有
者，并且这些文件的所属组改变为那个用户的登录所属组。如果冒号和所属组都指
定了，但没有指定所有者，这些文件只有所属组会发生改变。这种情况下，chown
和chgrp效果一样。如果只有一个冒号，或者什么也没有指定，文件的所有者和所
属组都不会改变。

##选项

修改每个文件的所有者和(或)所属组为指定的所有者和(或)所属组。使用参数
`--reference`时，修改每个文件的所有者和(或)所属组为参考文件的所有者和(或
)所属组。

* `-c,--changes`: 
类似verbose参数，但只会在发生变化时才会报告

* `-f,--silent,--quiet`:
禁止大部分的错误消息

* `-v,--verbose`:
对于每个文件的处理，都会打印分析报告

* `--dereference`:
影响每个符号链接所引用的文件(默认设置)，而不是符号链接本身

* `-h,--no-dereference`:
影响符号链接本身而不是其引用的文件(只在可以修改符号链接所有权的
系统上有效)

* `--from=当前所有者:当前所属组`:
当指定的文件的所有者和(或)所属组符合指定的当前所有者和(或)当前所
属组时，修改这些文件的所有者和(或)所属组。也可以省略所有者或所属
组，当这个属性没必要进行匹配时。

* `--no-preserve-root`:
不对’/’特殊处理(默认设置)

* `--preserve-root`:
不允许递归执行于’/’

* `--reference=参考文件`:
使用参考文件的所有者和所属组代替指定所有者和所属组

* `-R,--recursive`:
递归执行于文件和目录

当指定了-R选项时，下面的几个选项会修改遍历层次目录的方式。如果指
定了以下多个选项，只有最后一个选项才会生效。

* `-H`:
如果命令行参数是一个指向目录的符号链接，则遍历该目录

* `-L`:
遍历目录中的每一个符号链接
	
* `-P`:
不遍历任何一个符号链接(默认设置)

* `--help`:
显示帮助然后退出

* `--version`:
输出版本信息然后退出

当没有指定所有者时，所有者不会发生改变。当没有指定所属组时，一般情况下，
所属组不会发生改变，除非一个所有者符号后面跟着一个冒号，那么此时所属组将
会改变为该用户登录的所属组。所有者和所属组既可以是数字也可以是符号。

##示例

修改/u的所有者为"root"

	chown root /u

同样地，但还会修改它的所属组为"staff"

	chown root:staff/u

修改/u和其子文件的所有者为"root"

	chown -hR root /u

##参阅

chown(2)

本程序的完整文档使用Texinfo手册进行维护。如果info和本程序已经正确地安装
在了你的电脑上，通过下述命令

	info coreutils 'chown invocation'

可以访问完整的使用手册。
